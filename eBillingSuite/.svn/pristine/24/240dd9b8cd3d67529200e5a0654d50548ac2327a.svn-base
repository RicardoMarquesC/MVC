@model eBillingSuite.ViewModels.EBCCustomersXMLConfigsVM
@{
	var isAjax = Request.IsAjaxRequest();
	Layout = isAjax ? null : "~/Views/Shared/_eConnectorCustomersLayout.cshtml";
}
@if (!isAjax)
{
	<script>

	function InitTable() {
		$('#jq-datatables').dataTable({

			"language": {
				"url": '@this.GetjQDataTableLanguageUrl()'
			},
		});
		$('#jq-datatables_wrapper .table-caption').text('');
		$('#jq-datatables_wrapper .dataTables_filter input').attr('placeholder', 'Procurar');
	}

	init.push(function () {
		$('#FKInstanceID').change(function () {
			window.location = '@Html.Raw(@Url.Action("XmlConfigs", "eConnectorCustomers", new { id = "Guid", idcustomer = "GuidCustomer", tipoxml="tipoxml" }))'.replace('Guid', $('#FKInstanceID').find(":selected").val())
																																  .replace('GuidCustomer', $('#FKCustomerID').find(":selected").val())
																																  .replace('tipoxml', $('#tipoXml').find(":selected").val());
		});

		$('#FKCustomerID').change(function () {
			window.location = '@Html.Raw(@Url.Action("XmlConfigs", "eConnectorCustomers", new { id = "Guid", idcustomer = "GuidCustomer", tipoxml = "tipoxml" }))'.replace('Guid', $('#FKInstanceID').find(":selected").val())
																																	.replace('GuidCustomer', $('#FKCustomerID').find(":selected").val())
																																	.replace('tipoxml', $('#tipoXml').find(":selected").val());
		});

		$('#tipoXml').change(function () {
			console.log($('#tipoXml').find(":selected").val());
			window.location = '@Html.Raw(Url.Action("XmlConfigs", "eConnectorCustomers", new { id = "Guid", idcustomer = "GuidCustomer", tipoxml = "tipoxmlvalue" }))'.replace('Guid', $('#FKInstanceID').find(":selected").val())
																																.replace('GuidCustomer', $('#FKCustomerID').find(":selected").val())
																																.replace('tipoxmlvalue', $('#tipoXml').find(":selected").val());
		});

		$('a[data-toggle=tooltip]').tooltip();
		InitTable();
		ajaxInitPanelFunctions['init-jqtable'] = InitTable;

	});
</script>
}
<div class="tab-pane panel no-padding no-border fade in active"
	 data-rel="ajax-update-panel"
	 id="IndexConnectorConfigTXT"
	 data-update-init="init-jqtable"
	 data-update-url="@Url.Action("XmlConfigs")"
	 data-create-url="@Url.Action("CreateXmlConfig", "eConnectorCustomers", new { id = Model.FKInstanceID, idcustomer = Model.FKCustomerID, tipoxml = Model.tipoXml })"
	 data-modal-size="modal-lg">
	<div class="panel-heading">
		<span class="panel-title">@this.Get(DictionaryEntryKeys.eConnectorCustomersTitle)</span>
	</div>
	<div class="panel-body">
		<div class="row">
			@Html.PixelAdminSelectWithColFor(e => e.FKInstanceID, Model.AvailableInstances, 4, null, InputOptions.Default)		
			@if(Model.FKCustomerID != null)
			{
				@Html.PixelAdminSelectWithColFor(e => e.FKCustomerID, Model.AvailableCustomers, 4, null, InputOptions.Default)			
			}	
			
			@Html.PixelAdminSelectWithColFor(e => e.tipoXml, Model.AvailableTypes, 4, null, InputOptions.Default)
		</div>
	</div>

	<div class="panel-heading">
		<span class="panel-title">@this.Get(DictionaryEntryKeys.CustomersList)</span>
		<div class="panel-heading-controls">
			<button type="button"
					data-rel="ajax-create-trigger"
					title="@this.Get(DictionaryEntryKeys.CustomerAdd)"
					class="btn btn-xs btn-primary">
				<i class="fa fa-plus"></i>
			</button>
		</div>
	</div>
	<div class="panel-body">
		<div class="table-primary">
			<table cellpadding="0"
				   cellspacing="0"
				   border="0"
				   class="table table-striped table-bordered"
				   id="jq-datatables">
				<thead>
					<tr>
						<th>@this.Get(DictionaryEntryKeys.NomeCampo)</th>
						<th class="visible-lg">@this.Get(DictionaryEntryKeys.Tipo)</th>
						<th>@this.Get(DictionaryEntryKeys.Obrigatorio)</th>
						<th class="visible-lg">@this.Get(DictionaryEntryKeys.Posicao)</th>
						<th>@this.Get(DictionaryEntryKeys.CampoAT)</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@if (Model.FKCustomerID != null)
					{
						foreach (eBillingSuite.Model.EBC_DB.EBC_XML cap in Model.xmlheaders)
						{
							<tr>
								<td>@cap.NomeCampo</td>
								<td class="visible-lg">@this.Get(DictionaryEntryKeys.Cabecalho)</td>
								@if (cap.Obrigatorio.Value)
								{
									<td><span class="label label-success label-tag">@this.Get(DictionaryEntryKeys.Sim)</span></td>
								}
								else
								{
									<td><span class="label label-primary label-tag">@this.Get(DictionaryEntryKeys.Nao)</span></td>
								}
								<td class="visible-lg">@cap.Posicao</td>
								@if (cap.isATfield.Value)
								{
									<td><span class="label label-success label-tag">@this.Get(DictionaryEntryKeys.Sim)</span></td>
								}
								else
								{
									<td><span class="label label-primary label-tag">@this.Get(DictionaryEntryKeys.Nao)</span></td>
								}
								<td style="text-align:right; white-space:nowrap">
									<button type="button" class="btn btn-primary btn-sm" data-rel="ajax-edit-trigger" data-url="@Url.Action("EditXmlConfig", "eConnectorCustomers", new { id=Model.FKInstanceID, idcustomer = Model.FKCustomerID, tipoxml= Model.tipoXml, numeroxml = cap.NumeroXML, nomecampo = cap.NomeCampo })"><i class="fa fa-pencil"></i></button>
									<button type="button" class="btn btn-danger btn-sm" data-rel="ajax-delete-trigger" data-url="@Url.Action("DeleteXmlConfig", "eConnectorCustomers", new { numeroxml = cap.NumeroXML, nomecampo = cap.NomeCampo })"><i class="fa fa-times"></i></button>
								</td>
							</tr>
						}
						foreach (eBillingSuite.Model.EBC_DB.EBC_XMLLines cap in Model.xmllines)
						{
							<tr>
								<td>@cap.NomeCampo</td>
								<td class="visible-lg">@this.Get(DictionaryEntryKeys.LineItem)</td>
								@if (cap.Obrigatorio.Value)
								{
									<td><span class="label label-success label-tag">@this.Get(DictionaryEntryKeys.Sim)</span></td>
								}
								else
								{
									<td><span class="label label-primary label-tag">@this.Get(DictionaryEntryKeys.Nao)</span></td>
								}
								<td class="visible-lg">@cap.Posicao</td>
								@if (cap.isATfield.Value)
								{
									<td><span class="label label-success label-tag">@this.Get(DictionaryEntryKeys.Sim)</span></td>
								}
								else
								{
									<td><span class="label label-primary label-tag">@this.Get(DictionaryEntryKeys.Nao)</span></td>
								}
								<td style="text-align:right; white-space:nowrap">
									<button type="button" class="btn btn-primary btn-sm" data-rel="ajax-edit-trigger" data-url="@Url.Action("EditXmlConfig", "eConnectorCustomers", new { id=Model.FKInstanceID, idcustomer = Model.FKCustomerID, tipoxml= Model.tipoXml, numeroxml = cap.NumeroXML, nomecampo = cap.NomeCampo })"><i class="fa fa-pencil"></i></button>
									<button type="button" class="btn btn-danger btn-sm" data-rel="ajax-delete-trigger" data-url="@Url.Action("DeleteXmlConfig", "eConnectorCustomers", new { numeroxml = cap.NumeroXML, nomecampo = cap.NomeCampo })"><i class="fa fa-times"></i></button>
								</td>
							</tr>
						}
						foreach (eBillingSuite.Model.EBC_DB.EBC_XMLResumoIVA cap in Model.xmliva)
						{
							<tr>
								<td>@cap.NomeCampo</td>
								<td class="visible-lg">@this.Get(DictionaryEntryKeys.LineItem)</td>
								@if (cap.Obrigatorio.Value)
								{
									<td><span class="label label-success label-tag">@this.Get(DictionaryEntryKeys.Sim)</span></td>
								}
								else
								{
									<td><span class="label label-primary label-tag">@this.Get(DictionaryEntryKeys.Nao)</span></td>
								}
								<td class="visible-lg">@cap.Posicao</td>
								@if (cap.isATfield.Value)
								{
									<td><span class="label label-success label-tag">@this.Get(DictionaryEntryKeys.Sim)</span></td>
								}
								else
								{
									<td><span class="label label-primary label-tag">@this.Get(DictionaryEntryKeys.Nao)</span></td>
								}
								<td style="text-align:right; white-space:nowrap">
									<button type="button" class="btn btn-primary btn-sm" data-rel="ajax-edit-trigger" data-url="@Url.Action("EditXmlConfig", "eConnectorCustomers", new { id=Model.FKInstanceID, idcustomer = Model.FKCustomerID, tipoxml= Model.tipoXml, numeroxml = cap.NumeroXML, nomecampo = cap.NomeCampo })"><i class="fa fa-pencil"></i></button>
									<button type="button" class="btn btn-danger btn-sm" data-rel="ajax-delete-trigger" data-url="@Url.Action("DeleteXmlConfig", "eConnectorCustomers", new { numeroxml = cap.NumeroXML, nomecampo = cap.NomeCampo })"><i class="fa fa-times"></i></button>
								</td>
							</tr>
						}
					}
					
				</tbody>
			</table>
		</div>
	</div>
</div>