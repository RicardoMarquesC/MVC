@{
	var pc = ViewBag.PixelAdminPageContext as IPixelAdminPageContext;
}

@helper RenderMenuEntry(BasePixelAdminMenuEntry entry){
	if(entry is PixelAdminMenuEntry){
		var e = entry as PixelAdminMenuEntry;
		var hasSubMenu = e.SubMenu != null && e.SubMenu.Count > 0;
		var active = e.Active;
		var descendentActive = e.DescendentsActive;
				
		<li class="@(active || descendentActive?"active":null) @(hasSubMenu?"mm-dropdown":null) @(descendentActive?"open":null)">
			<a href="@(string.IsNullOrWhiteSpace(e.Url)?"#":e.Url)" target="@(e.OpenInNewWindow?"_blank":null)">
				@if(!string.IsNullOrWhiteSpace(e.Icon)){
					<i class="menu-icon fa @e.Icon"></i>
				}
				<span class="mm-text">@e.Label</span>
			</a>
			@if(e.SubMenu != null && e.SubMenu.Count > 0)
			{
			<ul>
				@foreach(var subEntry in e.SubMenu){
					@RenderMenuEntry(subEntry)
				}
			</ul>
			}
		</li>		
	}
}

<div id="main-menu" role="navigation">
	<div id="main-menu-inner">
		<div class="menu-content top" id="menu-content-demo">
			
		</div>
		<ul class="navigation">
			@foreach (var entry in pc.Menu) { 
				@RenderMenuEntry(entry)
			}
		</ul> <!-- / .navigation -->
		
	</div> <!-- / #main-menu-inner -->
</div> <!-- / #main-menu -->